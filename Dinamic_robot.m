%This file was atutomatically generated by --Generate_Dinamic--
%the input vector is:
%u=[q1 q2 q3 qp4 qp5 qp6 l1 l2 l3 ]
%NOTE: The function --Genera_Robot_robot_Exe-- must be executed
%before running the simulink-simulator for the first time
function Qpp=Dinamic_robot(u)
% 1 for standard PD
% 2 for PD using the ERROR State Transformation
% 3 for PID using the ERROR State Transformation
Controller = 3;
Kp = 100;
Kd = 2;
Ki = 1;

%desired position
q1d = deg2rad(30);
q2d = deg2rad(30);
q3d = deg2rad(30);

%desired velocity
qpd = [0;0;0];

%desired acceleration
qppd = [0;0;0];

persistent intErr;
if isempty(intErr)
	intErr = 0;
end
%Joint Position
q1=u(1);
q2=u(2);
q3=u(3);

%Joint Velocity
qp1=u(4);
qp2=u(5);
qp3=u(6);

%Kinematic Parameters
l1=u(7);
l2=u(8);
l3=u(9);

%Dynamic Parameters
m1=u(10);
m2=u(11);
m3=u(12);

I111=u(13);
I112=u(14);
I113=u(15);
I122=u(16);
I123=u(17);
I133=u(18);

I211=u(19);
I212=u(20);
I213=u(21);
I222=u(22);
I223=u(23);
I233=u(24);

I311=u(25);
I312=u(26);
I313=u(27);
I322=u(28);
I323=u(29);
I333=u(30);

%Gravity
g=u(31);

%Time
t=u(32);
%Viscous Friction Matrix
Beta(1,1)=u(33);
Beta(2,2)=u(34);
Beta(3,3)=u(35);

%Joint Position Vector
Q=[q1; q2; q3];
%Joint Velocity Vector
Qp=[qp1; qp2; qp3];

%Inertia Matrix
M =...
    [ I122 + I211/2 + I222/2 + I311/2 + I322/2 - (I311*cos(2*q2 + 2*q3))/2 + (I322*cos(2*q2 + 2*q3))/2 + I312*sin(2*q2 + 2*q3) + (l2^2*m2)/2 + (l2^2*m3)/2 + (l3^2*m3)/2 - (I211*cos(2*q2))/2 + (I222*cos(2*q2))/2 + (I211*sin(2*q2))/2 + (I212*sin(2*q2))/2 + (l2^2*m2*cos(2*q2))/2 + (l2^2*m3*cos(2*q2))/2 + (l3^2*m3*cos(2*q2 + 2*q3))/2 + l2*l3*m3*cos(q3) + l2*l3*m3*cos(2*q2 + q3), I323*cos(q2 + q3) + I313*sin(q2 + q3) + I223*cos(q2) + I213*sin(q2), I323*cos(q2 + q3) + I313*sin(q2 + q3)
    I323*cos(q2 + q3) + I313*sin(q2 + q3) + I223*cos(q2) + I213*sin(q2),      I233 + I333 + l2^2*m2 + l2^2*m3 + l3^2*m3 + 2*l2*l3*m3*cos(q3),     m3*l3^2 + l2*m3*cos(q3)*l3 + I333
    I323*cos(q2 + q3) + I313*sin(q2 + q3),                                   m3*l3^2 + l2*m3*cos(q3)*l3 + I333,                        m3*l3^2 + I333];

Tao=[0; 0; 0];
%Centripetal and Coriolis Matrix
C = ...
    [ - qp2*((I322*sin(2*q2 + 2*q3))/2 - (I311*sin(2*q2 + 2*q3))/2 - I312*cos(2*q2 + 2*q3) - (I211*cos(2*q2))/2 - (I212*cos(2*q2))/2 - (I211*sin(2*q2))/2 + (I222*sin(2*q2))/2 + (l3^2*m3*sin(2*q2 + 2*q3))/2 + (l2^2*m2*sin(2*q2))/2 + (l2^2*m3*sin(2*q2))/2 + l2*l3*m3*sin(2*q2 + q3)) - qp3*((I322*sin(2*q2 + 2*q3))/2 - (I311*sin(2*q2 + 2*q3))/2 - I312*cos(2*q2 + 2*q3) + (l3^2*m3*sin(2*q2 + 2*q3))/2 + (l2*l3*m3*sin(q3))/2 + (l2*l3*m3*sin(2*q2 + q3))/2), qp3*(I313*cos(q2 + q3) - I323*sin(q2 + q3)) - qp1*((I322*sin(2*q2 + 2*q3))/2 - (I311*sin(2*q2 + 2*q3))/2 - I312*cos(2*q2 + 2*q3) - (I211*cos(2*q2))/2 - (I212*cos(2*q2))/2 - (I211*sin(2*q2))/2 + (I222*sin(2*q2))/2 + (l3^2*m3*sin(2*q2 + 2*q3))/2 + (l2^2*m2*sin(2*q2))/2 + (l2^2*m3*sin(2*q2))/2 + l2*l3*m3*sin(2*q2 + q3)) + qp2*(I313*cos(q2 + q3) - I323*sin(q2 + q3) + I213*cos(q2) - I223*sin(q2)), qp2*(I313*cos(q2 + q3) - I323*sin(q2 + q3)) - (qp1*(I322*sin(2*q2 + 2*q3) - I311*sin(2*q2 + 2*q3) - 2*I312*cos(2*q2 + 2*q3) + l3^2*m3*sin(2*q2 + 2*q3) + l2*l3*m3*sin(q3) + l2*l3*m3*sin(2*q2 + q3)))/2 + qp3*(I313*cos(q2 + q3) - I323*sin(q2 + q3))
    qp1*((I322*sin(2*q2 + 2*q3))/2 - (I311*sin(2*q2 + 2*q3))/2 - I312*cos(2*q2 + 2*q3) - (I211*cos(2*q2))/2 - (I212*cos(2*q2))/2 - (I211*sin(2*q2))/2 + (I222*sin(2*q2))/2 + (l3^2*m3*sin(2*q2 + 2*q3))/2 + (l2^2*m2*sin(2*q2))/2 + (l2^2*m3*sin(2*q2))/2 + l2*l3*m3*sin(2*q2 + q3)),                                                                                                                                                                                                                                                                                                                                                                                      -l2*l3*m3*qp3*sin(q3),                                                                                                                                                                                                                         -l2*l3*m3*sin(q3)*(qp2 + qp3)
    (qp1*(I322*sin(2*q2 + 2*q3) - I311*sin(2*q2 + 2*q3) - 2*I312*cos(2*q2 + 2*q3) + l3^2*m3*sin(2*q2 + 2*q3) + l2*l3*m3*sin(q3) + l2*l3*m3*sin(2*q2 + q3)))/2,                                                                                                                                                                                                                                                                                                                                                                                       l2*l3*m3*qp2*sin(q3),                                                                                                                                                                                                                                                     0];



%Gravitational Torques Vector
G =...
    [ 0; - g*m3*(l3*cos(q2 + q3) + l2*cos(q2)) - g*l2*m2*cos(q2); -g*l3*m3*cos(q2 + q3)];

% Joint velocity reference
qd = [q1d;q2d;q3d];

qpr = [0;0;0];
qppr = [0;0;0];
intErr = intErr + (Q - qd);
if Controller == 1
elseif Controller == 2
    qpr = qpd - Kp.*(Q - qd);
    qppr  = qppd - Kp.*(Qp - qpd);
elseif  Controller == 3
    qpr = qpd - Kp.*(Q - qd) - Ki.*intErr;
    qppr  = qppd - Kp.*(Qp - qpd) - Ki.*(Q - qd);
end
qp1r = qpr(1);
qp2r = qpr(2);
qp3r = qpr(3);
qpp1r = qppr(1);
qpp2r = qppr(2);
qpp3r = qppr(3);

% Robot Regressor

% % Vector of Parameters
Theta(1,1)=I133;
Theta(2,1)=I322;
Theta(3,1)=I222;
Theta(4,1)=I211;
Theta(5,1)=I311;
Theta(6,1)=I212;
Theta(7,1)=l2^2*m2;
Theta(8,1)=l2^2*m3;
Theta(9,1)=l3^2*m3;
Theta(10,1)=I312;
Theta(11,1)=l2*l3*m3;
Theta(12,1)=I323;
Theta(13,1)=I213;
Theta(14,1)=I313;
Theta(15,1)=I223;
Theta(16,1)=I233;
Theta(17,1)=I333;
Theta(18,1)=l3*m3;
Theta(19,1)=l2*m3;
Theta(20,1)=l2*m2;


% % Sate Matrix
Yr(1,1) = qpp1r;
Yr(1,2) = qpp1r - qpp1r*cos(q2)^2 - qpp1r*cos(q3)^2 + 2*qpp1r*cos(q2)^2*cos(q3)^2 + qp1*qp2r*cos(q2)*sin(q2) + qp2*qp1r*cos(q2)*sin(q2) + qp1*qp3r*cos(q2)*sin(q2) + qp3*qp1r*cos(q2)*sin(q2) + qp1*qp2r*cos(q3)*sin(q3) + qp2*qp1r*cos(q3)*sin(q3) + qp1*qp3r*cos(q3)*sin(q3) + qp3*qp1r*cos(q3)*sin(q3) - 2*qp1*qp2r*cos(q2)*cos(q3)^2*sin(q2) - 2*qp2*qp1r*cos(q2)*cos(q3)^2*sin(q2) - 2*qp1*qp2r*cos(q2)^2*cos(q3)*sin(q3) - 2*qp1*qp3r*cos(q2)*cos(q3)^2*sin(q2) - 2*qp2*qp1r*cos(q2)^2*cos(q3)*sin(q3) - 2*qp3*qp1r*cos(q2)*cos(q3)^2*sin(q2) - 2*qp1*qp3r*cos(q2)^2*cos(q3)*sin(q3) - 2*qp3*qp1r*cos(q2)^2*cos(q3)*sin(q3) - 2*qpp1r*cos(q2)*cos(q3)*sin(q2)*sin(q3);
Yr(1,3) = qpp1r*cos(q2)^2 - qp1*qp2r*cos(q2)*sin(q2) - qp2*qp1r*cos(q2)*sin(q2);
Yr(1,4) = qpp1r - qpp1r*cos(q2)^2 - (qp1*qp2r)/2 - (qp2*qp1r)/2 + qp1*qp2r*cos(q2)^2 + qp2*qp1r*cos(q2)^2 + qpp1r*cos(q2)*sin(q2) + qp1*qp2r*cos(q2)*sin(q2) + qp2*qp1r*cos(q2)*sin(q2);
Yr(1,5) = qpp1r*cos(q2)^2 + qpp1r*cos(q3)^2 - 2*qpp1r*cos(q2)^2*cos(q3)^2 - qp1*qp2r*cos(q2)*sin(q2) - qp2*qp1r*cos(q2)*sin(q2) - qp1*qp3r*cos(q2)*sin(q2) - qp3*qp1r*cos(q2)*sin(q2) - qp1*qp2r*cos(q3)*sin(q3) - qp2*qp1r*cos(q3)*sin(q3) - qp1*qp3r*cos(q3)*sin(q3) - qp3*qp1r*cos(q3)*sin(q3) + 2*qp1*qp2r*cos(q2)*cos(q3)^2*sin(q2) + 2*qp2*qp1r*cos(q2)*cos(q3)^2*sin(q2) + 2*qp1*qp2r*cos(q2)^2*cos(q3)*sin(q3) + 2*qp1*qp3r*cos(q2)*cos(q3)^2*sin(q2) + 2*qp2*qp1r*cos(q2)^2*cos(q3)*sin(q3) + 2*qp3*qp1r*cos(q2)*cos(q3)^2*sin(q2) + 2*qp1*qp3r*cos(q2)^2*cos(q3)*sin(q3) + 2*qp3*qp1r*cos(q2)^2*cos(q3)*sin(q3) + 2*qpp1r*cos(q2)*cos(q3)*sin(q2)*sin(q3);
Yr(1,6) = qp1*qp2r*cos(q2)^2 - (qp2*qp1r)/2 - (qp1*qp2r)/2 + qp2*qp1r*cos(q2)^2 + qpp1r*cos(q2)*sin(q2);
Yr(1,7) = qpp1r*cos(q2)^2 - qp1*qp2r*cos(q2)*sin(q2) - qp2*qp1r*cos(q2)*sin(q2);
Yr(1,8) = qpp1r*cos(q2)^2 - qp1*qp2r*cos(q2)*sin(q2) - qp2*qp1r*cos(q2)*sin(q2);
Yr(1,9) = qpp1r - qpp1r*cos(q2)^2 - qpp1r*cos(q3)^2 + 2*qpp1r*cos(q2)^2*cos(q3)^2 + qp1*qp2r*cos(q2)*sin(q2) + qp2*qp1r*cos(q2)*sin(q2) + qp1*qp3r*cos(q2)*sin(q2) + qp3*qp1r*cos(q2)*sin(q2) + qp1*qp2r*cos(q3)*sin(q3) + qp2*qp1r*cos(q3)*sin(q3) + qp1*qp3r*cos(q3)*sin(q3) + qp3*qp1r*cos(q3)*sin(q3) - 2*qp1*qp2r*cos(q2)*cos(q3)^2*sin(q2) - 2*qp2*qp1r*cos(q2)*cos(q3)^2*sin(q2) - 2*qp1*qp2r*cos(q2)^2*cos(q3)*sin(q3) - 2*qp1*qp3r*cos(q2)*cos(q3)^2*sin(q2) - 2*qp2*qp1r*cos(q2)^2*cos(q3)*sin(q3) - 2*qp3*qp1r*cos(q2)*cos(q3)^2*sin(q2) - 2*qp1*qp3r*cos(q2)^2*cos(q3)*sin(q3) - 2*qp3*qp1r*cos(q2)^2*cos(q3)*sin(q3) - 2*qpp1r*cos(q2)*cos(q3)*sin(q2)*sin(q3);
Yr(1,10) = qp1*qp2r + qp2*qp1r + qp1*qp3r + qp3*qp1r - 2*qp1*qp2r*cos(q2)^2 - 2*qp2*qp1r*cos(q2)^2 - 2*qp1*qp2r*cos(q3)^2 - 2*qp1*qp3r*cos(q2)^2 - 2*qp2*qp1r*cos(q3)^2 - 2*qp3*qp1r*cos(q2)^2 - 2*qp1*qp3r*cos(q3)^2 - 2*qp3*qp1r*cos(q3)^2 - 2*qpp1r*cos(q2)*sin(q2) - 2*qpp1r*cos(q3)*sin(q3) + 4*qp1*qp2r*cos(q2)^2*cos(q3)^2 + 4*qp2*qp1r*cos(q2)^2*cos(q3)^2 + 4*qp1*qp3r*cos(q2)^2*cos(q3)^2 + 4*qp3*qp1r*cos(q2)^2*cos(q3)^2 + 4*qpp1r*cos(q2)*cos(q3)^2*sin(q2) + 4*qpp1r*cos(q2)^2*cos(q3)*sin(q3) - 4*qp1*qp2r*cos(q2)*cos(q3)*sin(q2)*sin(q3) - 4*qp2*qp1r*cos(q2)*cos(q3)*sin(q2)*sin(q3) - 4*qp1*qp3r*cos(q2)*cos(q3)*sin(q2)*sin(q3) - 4*qp3*qp1r*cos(q2)*cos(q3)*sin(q2)*sin(q3);
Yr(1,11) = qp1*qp2r*sin(q3) + qp2*qp1r*sin(q3) + 2*qpp1r*cos(q2)^2*cos(q3) - 2*qp1*qp2r*cos(q2)^2*sin(q3) - 2*qp2*qp1r*cos(q2)^2*sin(q3) - qp1*qp3r*cos(q2)^2*sin(q3) - qp3*qp1r*cos(q2)^2*sin(q3) - 2*qpp1r*cos(q2)*sin(q2)*sin(q3) - 2*qp1*qp2r*cos(q2)*cos(q3)*sin(q2) - 2*qp2*qp1r*cos(q2)*cos(q3)*sin(q2) - qp1*qp3r*cos(q2)*cos(q3)*sin(q2) - qp3*qp1r*cos(q2)*cos(q3)*sin(q2);
Yr(1,12) = qpp2r*cos(q2)*cos(q3) + qpp3r*cos(q2)*cos(q3) - qpp2r*sin(q2)*sin(q3) - qpp3r*sin(q2)*sin(q3) - qp2*qp2r*cos(q2)*sin(q3) - qp2*qp2r*cos(q3)*sin(q2) - qp2*qp3r*cos(q2)*sin(q3) - qp2*qp3r*cos(q3)*sin(q2) - qp3*qp2r*cos(q2)*sin(q3) - qp3*qp2r*cos(q3)*sin(q2) - qp3*qp3r*cos(q2)*sin(q3) - qp3*qp3r*cos(q3)*sin(q2);
Yr(1,13) = qpp2r*sin(q2) + qp2*qp2r*cos(q2);
Yr(1,14) = qpp2r*cos(q2)*sin(q3) + qpp2r*cos(q3)*sin(q2) + qpp3r*cos(q2)*sin(q3) + qpp3r*cos(q3)*sin(q2) - qp2*qp2r*sin(q2)*sin(q3) - qp2*qp3r*sin(q2)*sin(q3) - qp3*qp2r*sin(q2)*sin(q3) - qp3*qp3r*sin(q2)*sin(q3) + qp2*qp2r*cos(q2)*cos(q3) + qp2*qp3r*cos(q2)*cos(q3) + qp3*qp2r*cos(q2)*cos(q3) + qp3*qp3r*cos(q2)*cos(q3);
Yr(1,15) = qpp2r*cos(q2) - qp2*qp2r*sin(q2);
Yr(1,16) = 0;
Yr(1,17) = 0;
Yr(1,18) = 0;
Yr(1,19) = 0;
Yr(1,20) = 0;
Yr(2,1) = 0;
Yr(2,2) = 2*qp1*qp1r*cos(q2)*cos(q3)^2*sin(q2) - qp1*qp1r*cos(q3)*sin(q3) - qp1*qp1r*cos(q2)*sin(q2) + 2*qp1*qp1r*cos(q2)^2*cos(q3)*sin(q3);
Yr(2,3) = qp1*qp1r*cos(q2)*sin(q2);
Yr(2,4) = (qp1*qp1r)/2 - qp1*qp1r*cos(q2)^2 - qp1*qp1r*cos(q2)*sin(q2);
Yr(2,5) = qp1*qp1r*cos(q2)*sin(q2) + qp1*qp1r*cos(q3)*sin(q3) - 2*qp1*qp1r*cos(q2)*cos(q3)^2*sin(q2) - 2*qp1*qp1r*cos(q2)^2*cos(q3)*sin(q3);
Yr(2,6) = (qp1*qp1r)/2 - qp1*qp1r*cos(q2)^2;
Yr(2,7) = qpp2r + qp1*qp1r*cos(q2)*sin(q2);
Yr(2,8) = qpp2r + qp1*qp1r*cos(q2)*sin(q2);
Yr(2,9) = qpp2r + qpp3r - qp1*qp1r*cos(q2)*sin(q2) - qp1*qp1r*cos(q3)*sin(q3) + 2*qp1*qp1r*cos(q2)*cos(q3)^2*sin(q2) + 2*qp1*qp1r*cos(q2)^2*cos(q3)*sin(q3);
Yr(2,10) = 2*qp1*qp1r*cos(q2)^2 - qp1*qp1r + 2*qp1*qp1r*cos(q3)^2 - 4*qp1*qp1r*cos(q2)^2*cos(q3)^2 + 4*qp1*qp1r*cos(q2)*cos(q3)*sin(q2)*sin(q3);
Yr(2,11) = 2*qpp2r*cos(q3) + qpp3r*cos(q3) - qp1*qp1r*sin(q3) - qp2*qp3r*sin(q3) - qp3*qp2r*sin(q3) - qp3*qp3r*sin(q3) + 2*qp1*qp1r*cos(q2)^2*sin(q3) + 2*qp1*qp1r*cos(q2)*cos(q3)*sin(q2);
Yr(2,12) = qpp1r*cos(q2)*cos(q3) - qpp1r*sin(q2)*sin(q3);
Yr(2,13) = qpp1r*sin(q2);
Yr(2,14) = qpp1r*cos(q2)*sin(q3) + qpp1r*cos(q3)*sin(q2);
Yr(2,15) = qpp1r*cos(q2);
Yr(2,16) = qpp2r;
Yr(2,17) = qpp2r + qpp3r;
Yr(2,18) = g*sin(q2)*sin(q3) - g*cos(q2)*cos(q3);
Yr(2,19) = -g*cos(q2);
Yr(2,20) = -g*cos(q2);
Yr(3,1) = 0;
Yr(3,2) = 2*qp1*qp1r*cos(q2)*cos(q3)^2*sin(q2) - qp1*qp1r*cos(q3)*sin(q3) - qp1*qp1r*cos(q2)*sin(q2) + 2*qp1*qp1r*cos(q2)^2*cos(q3)*sin(q3);
Yr(3,3) = 0;
Yr(3,4) = 0;
Yr(3,5) = qp1*qp1r*cos(q2)*sin(q2) + qp1*qp1r*cos(q3)*sin(q3) - 2*qp1*qp1r*cos(q2)*cos(q3)^2*sin(q2) - 2*qp1*qp1r*cos(q2)^2*cos(q3)*sin(q3);
Yr(3,6) = 0;
Yr(3,7) = 0;
Yr(3,8) = 0;
Yr(3,9) = qpp2r + qpp3r - qp1*qp1r*cos(q2)*sin(q2) - qp1*qp1r*cos(q3)*sin(q3) + 2*qp1*qp1r*cos(q2)*cos(q3)^2*sin(q2) + 2*qp1*qp1r*cos(q2)^2*cos(q3)*sin(q3);
Yr(3,10) = 2*qp1*qp1r*cos(q2)^2 - qp1*qp1r + 2*qp1*qp1r*cos(q3)^2 - 4*qp1*qp1r*cos(q2)^2*cos(q3)^2 + 4*qp1*qp1r*cos(q2)*cos(q3)*sin(q2)*sin(q3);
Yr(3,11) = qpp2r*cos(q3) + qp2*qp2r*sin(q3) + qp1*qp1r*cos(q2)^2*sin(q3) + qp1*qp1r*cos(q2)*cos(q3)*sin(q2);
Yr(3,12) = qpp1r*cos(q2)*cos(q3) - qpp1r*sin(q2)*sin(q3);
Yr(3,13) = 0;
Yr(3,14) = qpp1r*cos(q2)*sin(q3) + qpp1r*cos(q3)*sin(q2);
Yr(3,15) = 0;
Yr(3,16) = 0;
Yr(3,17) = qpp2r + qpp3r;
Yr(3,18) = g*sin(q2)*sin(q3) - g*cos(q2)*cos(q3);
Yr(3,19) = 0;
Yr(3,20) = 0;



Tau=[0; 0; 0];
Sq = Qp - qpr;
if Controller == 1
    Tau = G - Kp.*(Q - qd) - Kd.*Qp + Beta*Qp;
elseif Controller == 2
    Tau = Yr*Theta - Kd.*Sq  + Beta*Qp;
elseif Controller == 3
    Tau = Yr*Theta - Kd.*Sq  + Beta*Qp;
end

rad2deg(Q)
Qpp=(M)\(Tau-C*Qp-G-Beta*Qp);